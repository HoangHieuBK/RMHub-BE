<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.1.3.RELEASE</version>
    <relativePath/> <!-- lookup parent from repository -->
  </parent>

  <groupId>hu.tradeland</groupId>
  <artifactId>rmhub</artifactId>
  <version>1.0.0-SNAPSHOT</version>
  <name>Road Management Hub</name>
  <description>Road Management Hub</description>
  <packaging>pom</packaging>

  <properties>
    <java.version>11</java.version>
    <sub.module.version>1.0.0-SNAPSHOT</sub.module.version>
    <json.version>20180813</json.version>
    <commons-io.version>2.6</commons-io.version>
    <modelmapper.version>2.3.5</modelmapper.version>
    <jacoco-maven-plugin.version>0.8.4</jacoco-maven-plugin.version>
    <require-maven.version>3.3.9</require-maven.version>
  </properties>

  <modules>

    <!-- Starter module -->

    <module>rmhub-starter</module>

    <!-- Test components -->

    <module>gateway-test</module>

    <!-- Common modules -->

    <module>common-core</module>

    <module>common-utility</module>

    <module>data-model</module>

    <module>kafka-connector</module>

    <module>infrastructure</module>

    <!-- Back-end service modules -->

    <module>device-mgmt-module</module>

    <module>weather-station-module</module>

    <module>traffic-logger-module</module>

    <module>notification-module</module>

    <!-- Connector modules -->

    <module>mivisu-connector-api</module>

    <module>mivisu-connector-ssilm</module>

  </modules>

  <dependencyManagement>
    <dependencies>

      <dependency>
        <groupId>org.modelmapper</groupId>
        <artifactId>modelmapper</artifactId>
        <version>${modelmapper.version}</version>
      </dependency>

      <dependency>
        <groupId>commons-io</groupId>
        <artifactId>commons-io</artifactId>
        <version>${commons-io.version}</version>
      </dependency>

      <dependency>
        <groupId>hu.tradeland</groupId>
        <artifactId>rmhub-starter</artifactId>
        <version>${sub.module.version}</version>
      </dependency>

      <dependency>
        <groupId>hu.tradeland</groupId>
        <artifactId>common-core</artifactId>
        <version>${sub.module.version}</version>
      </dependency>

      <dependency>
        <groupId>hu.tradeland</groupId>
        <artifactId>data-model</artifactId>
        <version>${sub.module.version}</version>
      </dependency>

      <dependency>
        <groupId>hu.tradeland</groupId>
        <artifactId>infrastructure</artifactId>
        <version>${sub.module.version}</version>
      </dependency>

      <dependency>
        <groupId>hu.tradeland</groupId>
        <artifactId>kafka-connector</artifactId>
        <version>${sub.module.version}</version>
      </dependency>

      <dependency>
        <groupId>hu.tradeland</groupId>
        <artifactId>common-utility</artifactId>
        <version>${sub.module.version}</version>
      </dependency>

    </dependencies>
  </dependencyManagement>
  <dependencies>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter</artifactId>
    </dependency>

    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-configuration-processor</artifactId>
      <optional>true</optional>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
      <exclusions>
        <!-- Fix duplicated occurrences of org.json.JSONObject on the classpath -->
        <exclusion>
          <groupId>com.vaadin.external.google</groupId>
          <artifactId>android-json</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
    </dependency>

    <dependency>
      <groupId>com.fasterxml.jackson.dataformat</groupId>
      <artifactId>jackson-dataformat-xml</artifactId>
    </dependency>

  </dependencies>

  <build>

    <pluginManagement>
      <plugins>

        <plugin>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-maven-plugin</artifactId>
          <executions>
            <execution>
              <id>repackage</id>
              <configuration>
                <classifier>exec</classifier>
              </configuration>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>${jacoco-maven-plugin.version}</version>
        </plugin>

      </plugins>
    </pluginManagement>

    <plugins>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <executions>
          <execution>
            <id>enforce-java-and-maven</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <!-- require Java version -->
                <requireJavaVersion>
                  <version>${java.version}</version>
                </requireJavaVersion>
                <!-- require Maven version -->
                <requireMavenVersion>
                  <version>${require-maven.version}</version>
                </requireMavenVersion>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>default-prepare-agent</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>default-report</id>
            <phase>test</phase>
            <goals>
              <goal>report</goal>
            </goals>
            <configuration>
              <!-- FIXME this is considered bad practice, but handy for developers -->
              <outputDirectory>${project.basedir}/../jacoco/${project.artifactId}</outputDirectory>
              <includes>
                <include>rmhub/**</include>
              </includes>
              <excludes>
                <exclude>**/entity/**</exclude>
                <exclude>**/dto/**</exclude>
                <exclude>**/config/**</exclude>
                <exclude>**/*Application.class</exclude>
              </excludes>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-clean-plugin</artifactId>
        <configuration>
          <filesets>
            <fileset>
              <!-- clean jacoco report also -->
              <directory>${project.basedir}/../jacoco/${project.artifactId}</directory>
              <includes>
                <include>**</include>
              </includes>
              <followSymlinks>false</followSymlinks>
            </fileset>
          </filesets>
        </configuration>
      </plugin>
    </plugins>

  </build>

</project>
